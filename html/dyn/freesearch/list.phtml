<?
  include_once ("../../../lib/inc.php");
  
  $apireturn["request"]["type"] = "freesearch";
  $apireturn["request"]["search"] = $_REQUEST["search"];
  $apireturn["request"]["offset"] = $_REQUEST["offset"];

  if ($_REQUEST["search"])
  {
    // fetching and analyzing apple music results

    $applefirstres = searchapple ($_REQUEST["search"], $_REQUEST["offset"], $_REQUEST["country"]);
    
    // filtering out the results

    $forbidden = implode ("|", $omnisearch_forbidden);
    $forbidden_regexp = '/\b('. $forbidden. ')\b/i';

    $top_appleres = [];
    $mid_appleres = [];
    $bottom_appleres = [];
    $allperfs = [];

    foreach ($applefirstres as $alb)
    {
      $composersummary = $alb["work"]["composer"]["complete_name"];
      $worksummary = $composersummary. " ". $alb["work"]["title"];
      $recordingsummary = $worksummary. " ". preg_replace ($forbidden_regexp, "", implode (" ", $alb["performers"]));

      if (in_string ($_REQUEST["search"], $recordingsummary))
      {
        if (in_string ($_REQUEST["search"], $composersummary))
        {
          $top_appleres[] = $alb;
        }
        else if (in_string ($_REQUEST["search"], $worksummary))
        {
          $mid_appleres[] = $alb;
        }
        else
        {
          $bottom_appleres[] = $alb;
        }

        $allperfs = array_merge ($allperfs, $alb["performers"]);
      }
    }

    $appleres = array_merge ($top_appleres, $mid_appleres, $bottom_appleres);

    // guessing the performers

    $perfs = openopusdownparse ("dyn/performer/list/", ["names"=>json_encode ($allperfs)]);
    $rldb = $perfs["performers"]["digest"];

    // adding the performers to the recording items

    foreach ($appleres as $k => $alb)
    {
      $appleres[$k]["performers"] = allperformers ($alb["performers"], $rldb, $alb["work"]["composer"]["complete_name"]);
    }

    $apireturn["recordings"] = $appleres;
    
    if (sizeof ($applefirstres) == 100)
    {
        $apireturn["next"] = $_REQUEST["offset"] + 100;
    }
  }

  if (isset ($apireturn["recordings"]))
  {
    $apireturn["status"] = Array ("success"=>"true", "source" => "ext", "rows"=>sizeof ($apireturn["recordings"]), "country"=>($_REQUEST["country"] ? $_REQUEST["country"] : "us"));
      
    if ($_REQUEST["country"])
    {
      echo savecache ("/freesearch/{$_REQUEST["country"]}/{$_REQUEST["search"]}/{$_REQUEST["offset"]}.json", apireturn ($apireturn));
    }
    else
    {
      echo savecache ("/freesearch/{$_REQUEST["search"]}/{$_REQUEST["offset"]}.json", apireturn ($apireturn));
    }
  }
  else
  {
    $apireturn["status"] = Array ("success"=>"false", "source" => "ext", "error"=>"No recordings found");
    unset ($apireturn["recordings"]);

    echo apireturn ($apireturn);
  }
  