<?
  include_once ("../../../lib/inc.php");
  global $timesteps;

  $goquery = true;

  // new compatible sets

  if (stristr ($_REQUEST["set"], "at*"))
  {
    $_REQUEST["wid"] = $_REQUEST["set"];
    $_REQUEST["set"] = "1";
  }

  if (stristr ($_REQUEST["wid"], "at*"))
  {
    // apple music work

    $goquery = true;
    $work_appletid = str_replace ("at*", "", $_REQUEST["wid"]);
    $apireturn["status"] = Array ("success"=>"true", "source"=>"ext", "country"=>($_REQUEST["country"] ? $_REQUEST["country"] : "us"));

    // fetching album and looking for the track
    
    //$spot = detailapple ($_REQUEST["aid"], $work_appletid, $_REQUEST["country"]);
    $spot = albumapple ($_REQUEST["aid"], $_REQUEST["country"]);

    foreach ($spot["items"] as $recording)
    {
      foreach ($recording["tracks"] as $track)
      {
        if ($track["apple_trackid"] == $work_appletid)
        {
          $apireturn["work"] = $recording["work"];
          $spot["items"] = $recording["tracks"];
        }
      }
    }

    //$apireturn["work"] = ["id" => $_REQUEST["wid"], "title" => $spot["extras"]["work"]["title"], "subtitle" => $spot["extras"]["work"]["subtitle"], "composer" => $spot["extras"]["composer"], "genre"=>"None"];
    
    $apireturn["recording"] = Array
      (
        "apple_albumid"=>$_REQUEST["aid"],
        "apple_tracks"=>Array (),
        "performers"=>Array (),
        "tracks"=>Array (),
      );
  }
  else
  {
    // open opus work

    $work = openopusdownparse ("work/detail/{$_REQUEST["wid"]}.json");
  
    if (!$work)
    {
      // if work doesn't exist, return an error

      $apireturn["status"] = Array ("success"=>"false", "error"=>"Work not found");
      $goquery = false;
    }
    else
    {
      // work exists

      $work["recording"]["apple_albumid"] = $_REQUEST["aid"];

      $apireturn["work"] = $work["work"];
      $apireturn["work"]["composer"] = $work["composer"];
      
      $apireturn["recording"] = Array
        (
          "apple_albumid"=>$_REQUEST["aid"],
          "apple_tracks"=>Array (),
          "performers"=>Array (),
          "tracks"=>Array (),
        );

      // fetching data from apple music

      $apireturn["recording"]["length"] = 0;
      $apireturn["status"] = Array ("success"=>"true", "source"=>"ext", "country"=>($_REQUEST["country"] ? $_REQUEST["country"] : "us"));

      $spot = fetchapple ($work, "tracks", 0, 0, $_REQUEST["country"], "");

      // dealing with empty albums

      if (!sizeof ($spot["items"]) && $work["work"]["searchmode"] == "catalogue")
      {
        $work["work"]["searchmode"] = "title";
        $work["work"]["searchterms"] = [worksimplifier ($work["work"]["title"])];

        $spot = fetchapple ($work, "tracks", 0, 0, $_REQUEST["country"], "");
      }
    }
  }

  if ($goquery)
  {
    // guessing the performers

    $perfs = openopusdownparse ("dyn/performer/list/", ["names"=>json_encode (end($spot["items"])["performers"])]);
    $rldb = $perfs["performers"]["digest"];

    // adding extradata to apple music results

    $spot = extradata ($spot, Array ("wid"=>$_REQUEST["wid"], "aid"=>$_REQUEST["aid"], "set"=>$_REQUEST["set"]));

    if ($spot["extras"]["observation"]) $apireturn["work"]["subtitle"] = $spot["extras"]["observation"];

    $spotres = $spot["items"];
    $apireturn["status"]["stats"] = $spot["stats"];
    $index = 0;
    
    foreach ($spotres as $tart)
    {
      $trinsert[] = Array
      (
        "cd" => $tart["cd"],
        "index" => $index++,
        "position" => $tart["position"],
        "length" => $tart["length"],
        "title" => $tart["title"],
        "apple_trackid" => $tart["apple_trackid"],
        "preview" => $tart["preview"]
      );

      $apireturn["recording"]["tracks"][] = end ($trinsert);
      $apireturn["recording"]["length"] += end($trinsert)["length"];
    }

    $apireturn["recording"]["verified"] = $spot["extras"]["verified"] ? "true" : "false";
    $apireturn["recording"]["cover"] = $spot["extras"]["cover"];
    $apireturn["recording"]["set"] = intval ($_REQUEST["set"]);
    $apireturn["recording"]["year"] = explode ("-", $spot["extras"]["year"])[0];
    $apireturn["recording"]["label"] = $spot["extras"]["label"];
    $apireturn["recording"]["performers"] = (end($spotres)["extraperformers"]) ? orderperformers (end($spotres)["extraperformers"]) : allperformers (end($spotres)["performers"], $rldb, $apireturn["work"]["composer"]["complete_name"]);
  }

  // setting auxiliary trackset & setting tracks starting points

  if (isset ($apireturn["recording"]["tracks"]) && $apireturn["recording"]["apple_albumid"])
  {
    $acctiming = 0;

    foreach ($apireturn["recording"]["tracks"] as $trid => $track)
    {
      $apireturn["recording"]["tracks"][$trid]["starting_point"] = $acctiming;
      $acctiming += $track["length"];
      $apireturn["recording"]["apple_tracks"][] = $apireturn["recording"]["tracks"][$trid]["apple_trackid"];
      $apireturn["recording"]["previews"][] = $apireturn["recording"]["tracks"][$trid]["preview"];
    }
  }

  if ($_REQUEST["country"])
  {
    echo savecache ("/recording/{$_REQUEST["country"]}/detail/work/{$_REQUEST["wid"]}/album/{$_REQUEST["aid"]}/{$_REQUEST["set"]}.json", apireturn ($apireturn));
  }
  else 
  {
    echo savecache ("/recording/detail/work/{$_REQUEST["wid"]}/album/{$_REQUEST["aid"]}/{$_REQUEST["set"]}.json", apireturn ($apireturn));
  }